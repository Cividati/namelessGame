/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Test;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Insets;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import namelessgame.Gameplay.Dungeon;
import namelessgame.Gameplay.Game;
import namelessgame.Gameplay.Player;

/**
 *
 * @author Henrique Barcia Lang
 */
public class DungeonFrame extends javax.swing.JFrame {

    /**
     * Creates new form DungeonFrame
     */
    
    private Map<javax.swing.JButton, Dungeon> dungeonMap = new HashMap<>();
    private Player player = Game.getPlayer();
    
    public DungeonFrame() {
        initComponents();
        
        try
        {
            Dungeon dungeon1Data = Game.getDungeons().get(0);
            
            dungeonMap.put(dungeon1, dungeon1Data);
            dungeon1.setToolTipText("<html>" +
                                    dungeon1Data.getName() + "<br><br>" +
                                    dungeon1Data.getDescr() + "<br><br>" +
                                    "Min lv.: <font color = " + (player.getLevel() >= dungeon1Data.getMinLv() ? "\"green\"" : "\"red\"") + ">" + dungeon1Data.getMinLv() + "</font><br></html>");
            
            dungeon1.addActionListener(new java.awt.event.ActionListener() {           
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    DungeonActionPerformed(evt);
                }
            });
        }
        catch(Exception e)
        {
            System.out.println("Error when setting up dungeons... " + e.getMessage());
        }
    }
    
    private void DungeonActionPerformed(java.awt.event.ActionEvent evt) {
        javax.swing.JButton selectedButton = (javax.swing.JButton) evt.getSource();
        Dungeon myDungeon = dungeonMap.get(selectedButton);
        
        if(player.getLevel() < myDungeon.getMinLv())
        {
            Game.sendErrorMessage("You are not strong enough to explore this dungeon yet.");
            
            return;
        }
        
        int enterDungeon = JOptionPane.showConfirmDialog(this, "Are you sure you want to explore this dungeon?", "Explore dungeon", JOptionPane.YES_NO_OPTION);

        if(enterDungeon == 1)
            return;

        this.dispose();
        Game.startExploringDungeon(myDungeon);
        
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoLabel = new javax.swing.JLabel();
        dungeon2 = new javax.swing.JButton();
        dungeon1 = new javax.swing.JButton();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        getContentPane().setLayout(null);

        infoLabel.setFont(new java.awt.Font("Yu Gothic Medium", 1, 48)); // NOI18N
        infoLabel.setForeground(new java.awt.Color(51, 51, 51));
        infoLabel.setText("Dungeons");
        getContentPane().add(infoLabel);
        infoLabel.setBounds(530, 10, 270, 60);

        dungeon2.setBackground(new java.awt.Color(255, 0, 0));
        getContentPane().add(dungeon2);
        dungeon2.setBounds(280, 170, 30, 25);

        dungeon1.setBackground(new java.awt.Color(255, 0, 0));
        getContentPane().add(dungeon1);
        dungeon1.setBounds(280, 380, 30, 25);

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/namelessgame/img/1200px-LGPE_Kanto_Map.png"))); // NOI18N
        getContentPane().add(backgroundLabel);
        backgroundLabel.setBounds(0, 0, 1280, 849);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DungeonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DungeonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DungeonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DungeonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DungeonFrame().setVisible(true);
            }
        });
    }
    
    private static class RoundedBorder implements Border {

    private int radius;


    RoundedBorder(int radius) {
        this.radius = radius;
    }


    @Override
    public Insets getBorderInsets(Component c) {
        return new Insets(this.radius+1, this.radius+1, this.radius+2, this.radius);
    }


    @Override
    public boolean isBorderOpaque() {
        return true;
    }


    @Override
    public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
        g.drawRoundRect(x, y, width-1, height-1, radius, radius);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JButton dungeon1;
    private javax.swing.JButton dungeon2;
    private javax.swing.JLabel infoLabel;
    // End of variables declaration//GEN-END:variables
}
